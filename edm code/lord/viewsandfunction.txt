CREATE database testDB;
use testDB;

CREATE TABLE CUSTOMERS (
   ID INT NOT NULL,
   NAME VARCHAR (20) NOT NULL,
   AGE INT NOT NULL,
   ADDRESS CHAR (25),
   SALARY DECIMAL (18, 2),
   PRIMARY KEY (ID)
);

INSERT INTO CUSTOMERS VALUES 
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00 ),
(2, 'Khilan', 25, 'Delhi', 1500.00 ),
(3, 'Kaushik', 23, 'Kota', 2000.00 ),
(4, 'Chaitali', 25, 'Mumbai', 6500.00 ),
(5, 'Hardik', 27, 'Bhopal', 8500.00 ),
(6, 'Komal', 22, 'Hyderabad', 4500.00 ),
(7, 'Muffy', 24, 'Indore', 10000.00 );

DESCRIBE CUSTOMERS;



CREATE VIEW CUSTOMERS_MUMBAI_INDORE AS
 SELECT NAME, ADDRESS FROM CUSTOMERS
 WHERE ADDRESS = "MUMBAI" OR ADDRESS = "INDORE";
 
 
SELECT * FROM CUSTOMERS_MUMBAI_INDORE;

DELIMITER $$
CREATE PROCEDURE GETCUSTOMERINFO()
BEGIN
 SELECT * FROM CUSTOMERS WHERE AGE > 25;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE GETCUSTOMERINFO_2(IN CUSTOMERAGE INT)
BEGIN
 SELECT * FROM CUSTOMERS WHERE AGE >= CUSTOMERAGE;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE GetCustomerSalary(IN CustomerID INT, OUT Cust_Salary DECIMAL(18,2))
BEGIN
 SELECT Salary*12 INTO Cust_Salary FROM CUSTOMERS WHERE ID = CustomerID;
END $$
DELIMITER ;

DELIMITER $$
CREATE FUNCTION CustomerLevel(salary float(10,2))
RETURNS VARCHAR(20)
DETERMINISTIC 
BEGIN
 DECLARE CustomerLevel VARCHAR(20);
 IF salary > 50000 THEN
  SET CustomerLevel = "PLATINUM";
 ELSEIF (salary >= 50000 AND salary <= 10000) THEN
  SET CustomerLevel = "GOLD";
 ELSEIF salary < 10000 THEN 
  SET CustomerLevel = "SILVER";
 END IF;
 RETURN(CustomerLevel);

END $$
DELIMITER ;


CALL GETCUSTOMERINFO();
CALL GETCUSTOMERINFO_2(23);
CALL GetCustomerSalary(3,@S);
SELECT @S AS SALARY;

SELECT
 name,
 CustomerLevel(salary)
FROM
 customers
ORDER BY
 name